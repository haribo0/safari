<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ja.safari.used.mapper.UsedSqlMapper">

<select id="selectUserDtoById" resultType="com.ja.safari.dto.UserDto">
	SELECT * FROM USER_TABLE WHERE id=#{id}
</select>


<select id="selectMainCategory" resultType="com.ja.safari.dto.ProductMainCategoryDto">
	select * from PRODUCT_MAIN_CATEGORY order by id
</select>

<select id="selectSubCategory" resultType="com.ja.safari.dto.ProductSubCategoryDto">
	select * from PRODUCT_SUB_CATEGORY 
	where product_main_category_id = #{mainCategoryId}
	order by id
</select>

<select id="selectProductCity" resultType="com.ja.safari.dto.ProductCityDto">
	select * from PRODUCT_CITY order by id
</select>

<select id="selectProductTown" resultType="com.ja.safari.dto.ProductTownDto">
	select * from PRODUCT_TOWN
	where product_city_id = #{cityId}
	order by id
</select>

<select id="selectProductTownById" resultType="com.ja.safari.dto.ProductTownDto">
	SELECT * FROM PRODUCT_TOWN WHERE id = #{townId}
</select>

<select id="selectProductCityByTownId" resultType="com.ja.safari.dto.ProductCityDto">
	SELECT * FROM PRODUCT_CITY WHERE id = (SELECT product_city_id FROM PRODUCT_TOWN WHERE id=#{townId})
</select>

<select id="createProductPk" resultType="int">
	select product_seq.nextval from dual
</select>

<insert id="insertProduct">
	INSERT INTO product VALUES(
	#{id},
	#{user_id},
	#{product_sub_category},
	#{title},
	#{price},
	#{content},
	#{location},
	0,
	SYSDATE,
	#{product_town_id}
)
</insert>

<insert id="insertProductImg">
	INSERT INTO product_img VALUES(
		product_img_seq.nextval,
		#{product_id},
		#{product_img_link}
	)
</insert>

<select id="selectProductByAllCondition" resultType="com.ja.safari.dto.ProductDto">
	SELECT p.*, NVL(pl.likeCount, 0) AS Likecount
	FROM product p
	LEFT JOIN (
    SELECT product_id, COUNT(*) AS likeCount
    FROM PRODUCT_LIKE
    GROUP BY product_id
	) pl ON p.id = pl.product_id
	WHERE 1 = 1
	<if test="mainId != -1">
	AND product_sub_category 
	IN (SELECT id FROM PRODUCT_SUB_CATEGORY 
	WHERE product_main_category_id = #{mainId}
		<if test="subId != -1">
		AND id = #{subId}
		</if>
	)
	</if>
	<if test="cityId != -1">
	AND product_town_id 
	IN (SELECT id FROM product_town 
	WHERE product_city_id=#{cityId})
	</if>
	<if test="townId != -1">
	AND product_town_id 
	IN (SELECT id FROM product_town 
	WHERE id=#{townId})
	</if>
	<if test="statusId == 1">
	AND id NOT IN
	(SELECT product_id FROM product_request WHERE status IN('거래완료'))
	</if>
	<if test="orderId == -1"> 
	ORDER BY reg_date DESC
	</if>
	<if test="orderId == 1"> 
		ORDER BY NVL(pl.likeCount, 0) DESC
	</if>
	<if test="orderId == 2"> 
		ORDER BY price
	</if>
	<if test="orderId == 3"> 
		ORDER BY price DESC
	</if>
</select>



<select id="selectProduct" resultType="com.ja.safari.dto.ProductDto">
	select * from product order by id DESC
</select>

<select id="selectProductImg" resultType="com.ja.safari.dto.ProductImgDto">
	SELECT * FROM PRODUCT_IMG WHERE ID = (SELECT MIN(ID) FROM PRODUCT_IMG WHERE PRODUCT_ID = #{productId})
</select>

<select id="selectProductImgAll" resultType="com.ja.safari.dto.ProductImgDto">
	SELECT * FROM PRODUCT_IMG WHERE product_id = #{productID} ORDER BY ID
</select>

<select id="selectProductById" resultType="com.ja.safari.dto.ProductDto">
	select * from product where id = #{productId}
</select>

<update id="updateProductViewsById">
	update product set views = views + 1 where id = #{productId}
</update>

<select id="selectProductLikeCountByProductId" resultType="int">
	SELECT count(*) FROM PRODUCT_LIKE WHERE product_id=#{productId}
</select>

<insert id="insertProductLike">
	insert into PRODUCT_LIKE values(
		product_like_seq.nextval,
		#{product_id},
		#{user_id},
		SYSDATE
	)
</insert>

<delete id="deleteProductLike">
	delete from PRODUCT_LIKE
		where product_id = #{product_id} 
		and user_id = #{user_id}
</delete>

<select id="selectMyProductLike" resultType="int">
	SELECT count(*) FROM PRODUCT_LIKE WHERE product_id=#{product_id} and user_id = #{user_id}
</select>

<select id="selectProductSubCategoryById" resultType="com.ja.safari.dto.ProductSubCategoryDto">
	SELECT * FROM product_sub_category WHERE id=#{id}
</select>

<select id="selectProductMainbCategoryById" resultType="com.ja.safari.dto.ProductMainCategoryDto">
	SELECT * FROM product_main_category WHERE id=#{id}
</select>

<update id="updateProduct">
	update product set product_sub_category=#{product_sub_category}, 
	product_town_id=#{product_town_id},
	title=#{title}, price=#{price},
	 content=#{content}, location =#{location}, reg_date = SYSDATE
	 where id=#{id}
</update>

<delete id="deleteProductImgByProductId">
	delete from PRODUCT_IMG
		where product_id = #{productId} 
</delete>

<delete id="deleteProductByProductId">
	delete from PRODUCT
		where id = #{id} 
</delete>

<insert id="insertProductRequest">
	insert into PRODUCT_REQUEST values(
		PRODUCT_REQUEST_SEQ.nextval,
		#{product_id},
		#{user_id},
		'거래요청',
		SYSDATE
	)
</insert>

<select id="selectProductRequestByProductId" resultType="com.ja.safari.dto.ProductRequestDto">
	select * from PRODUCT_REQUEST where product_id = #{productId} order by id DESC
</select>

<select id="selectProductRequestCountByUser" resultType="int">
	SELECT COUNT(*) FROM PRODUCT_REQUEST WHERE product_id=#{productId} AND user_id=#{userId}
</select>

<delete id="deleteProductRequestByUser">
	delete from PRODUCT_REQUEST WHERE product_id=#{productId} AND user_id=#{userId}
</delete>

<update id="updateProductRequestStatusReservate">
	update PRODUCT_REQUEST set status='예약중' WHERE product_id=#{productId} AND user_id=#{userId}
</update>

<update id="updateProductRequestStatusComplete">
	update PRODUCT_REQUEST set status='거래완료' WHERE product_id=#{productId} AND user_id=#{userId}
</update>

<update id="updateProductRequestStatusCancel">
	update PRODUCT_REQUEST set status='거래요청' WHERE product_id=#{productId} AND user_id=#{userId}
</update>

<select id="countProductRequestReservation" resultType="int">
	SELECT COUNT(*) FROM PRODUCT_REQUEST WHERE product_id=#{productId} and status='예약중'
</select>

<select id="countProductRequestComplete" resultType="int">
	SELECT COUNT(*) FROM PRODUCT_REQUEST WHERE product_id=#{productId} and status='거래완료'
</select>

<select id="countProductRequestByProductId" resultType="int">
	SELECT COUNT(*) FROM product_request WHERE product_id=#{productId}
</select>

<select id="selectBestProduct" resultType="com.ja.safari.dto.ProductDto">
	SELECT * FROM product WHERE id in (SELECT product_id FROM 
	(SELECT product_id, ROWNUM rn FROM (
	SELECT product_id,count(*) FROM PRODUCT_LIKE WHERE product_id NOT IN
	(SELECT product_id FROM product_request WHERE status IN('거래완료'))
	GROUP BY product_id ORDER BY count(*) DESC)
	ORDER BY rn))
</select>

<select id="selectProductByCategory" resultType="com.ja.safari.dto.ProductDto">
	SELECT * FROM PRODUCT 
	WHERE product_sub_category IN 
	(SELECT id FROM PRODUCT_SUB_CATEGORY 
	WHERE product_main_category_id = #{mainId}
	<if test="subId != null and subId != ''">  
	AND id = #{subId}
	</if>
	)
</select>

<select id="selectProductRequestAllByUserId" resultType="com.ja.safari.dto.ProductRequestDto">
	<!-- SELECT * FROM PRODUCT_REQUEST WHERE user_id=#{userId} 
	OR product_id 
	IN(SELECT id FROM product WHERE user_id=#{userId})
	ORDER BY 
	(SELECT read_unread FROM PRODUCT_CHAT 
	WHERE id=(SELECT max(id) FROM PRODUCT_CHAT WHERE receiver_id=#{userId})),
	reg_date DESC
	 -->
	SELECT p3.*,p4.* FROM (SELECT * FROM PRODUCT_REQUEST WHERE user_id=#{userId}
	OR product_id 
	IN(SELECT id FROM product WHERE user_id=#{userId})) p3 
	FULL OUTER JOIN 
	(SELECT p1.id, p1.purchase_request_id,p1.reg_date b, p2.read_unread a FROM (SELECT * FROM product_chat WHERE id IN (SELECT max(id) FROM product_chat group BY purchase_request_id)) p1
	FULL OUTER JOIN (SELECT * FROM product_chat WHERE id IN (SELECT max(id) maxId FROM PRODUCT_CHAT WHERE receiver_id=#{userId} GROUP BY purchase_request_id) AND read_unread='N')p2
	ON p1.id=p2.id)p4
	ON p3.id = p4.purchase_request_id WHERE p3.id IS NOT NULL ORDER BY NVL(p4.a,'Y'), NVL(p4.b,p3.reg_date) DESC
</select>

<insert id="insertProductChat" >
	INSERT INTO product_chat VALUES(
	product_chat_seq.nextval,
	#{purchase_request_id},
	#{sender_id},
	#{receiver_id},
	#{content},
	'N',
	SYSDATE
)
</insert>

<select id="selectProductChatByRequestId" resultType="com.ja.safari.dto.ProductChatDto">
	select * from product_chat where purchase_request_id=#{requestId} order by id
</select>

<select id="selectLastChatContent" resultType="com.ja.safari.dto.ProductChatDto">
	SELECT * FROM PRODUCT_CHAT WHERE id =(SELECT max(id) FROM product_chat WHERE purchase_request_id = #{requestId})
</select>

<select id="selectChatCount" resultType="int">
	SELECT COUNT(*) FROM PRODUCT_CHAT WHERE purchase_request_id = #{requestId}
</select>

<update id="updateIsRead">
	UPDATE PRODUCT_CHAT SET read_unread='Y' 
	WHERE purchase_request_id=#{requestId} 
	AND receiver_id=#{receiverId} 
	AND read_unread='N'
</update>

<select id="selectUnreadCountByRequestId" resultType="int">
	SELECT count(*) FROM PRODUCT_CHAT WHERE purchase_request_id=#{requestId} AND receiver_id=#{receiverId} AND READ_UNREAD = 'N'
</select>

<select id="selectProductRequestById" resultType="com.ja.safari.dto.ProductRequestDto">
	SELECT * FROM PRODUCT_REQUEST WHERE id=#{id}
</select>

<select id="selectProductRequestByProductIdAndRequestId" resultType="com.ja.safari.dto.ProductRequestDto">
	SELECT  * FROM product_request WHERE product_id=#{productId} AND user_id=#{requesterId}
</select>

<insert id="saveOrderAndPaymentInfo">
	INSERT INTO product_chat VALUES(
	used_kakao_payment_seq.nextval,
	#{partner_order_id},
	#{partner_user_id},
	#{cid},
	#{tid},
	#{pg_token},
	#{item_name},
	#{item_code},
	#{amount},
	#{payment_method_type},
	SYSDATE
)
	
</insert>

<!-- 결제 주문 저장 -->
<insert id="insertUsedPayment">
	INSERT INTO used_kakao_payment VALUES (
		used_kakao_payment_seq.nextval,
		#{partner_order_id},
		#{partner_user_id},
		#{cid},
		#{tid},
		#{pg_token},
		#{item_name},
		#{item_code},
		#{amount},
		#{payment_method_type},
		SYSDATE
	)
</insert>

<!-- 결제 dto -->
<select id="getUsedPaymentByOrderId" resultType="com.ja.safari.dto.UsedKaKaoPayApproveDto">
	SELECT *
	FROM used_kakao_payment
	WHERE partner_order_id = #{orderId}
</select>

<!-- 리뷰 평가 카테고리  dto -->
<select id="selectUsedReviewRateCategory" resultType="com.ja.safari.dto.UsedReviewRateCategoryDto">
	SELECT * FROM used_review_rate_category order by id
</select>

<!-- 리뷰 평가 카테고리  dto - 평가 id에 따른 -->
<select id="selectUsedReviewRateCategoryById" resultType="com.ja.safari.dto.UsedReviewRateCategoryDto">
	SELECT * FROM used_review_rate_category WHERE id=#{id}
</select>

<!-- 리뷰 체크박스 카테고리  dto- 평가 id에 따른 -->
<select id="selectUsedReviewCheckboxCategoryByRateId" resultType="com.ja.safari.dto.UsedReviewCheckboxCategoryDto">
	SELECT * FROM used_review_checkbox_category WHERE review_rate_category_id=#{rateId}
</select>

<select id="selectPurchaseReviewPk" resultType="int">
	SELECT used_purchase_review_seq.nextval FROM DUAL
</select>

<!-- 거래 리뷰 저장  -->
<insert id="insertUsedPurchaseReview">
	INSERT INTO used_purchase_review VALUES(
	#{id},
	#{purchase_request_id},
	#{sender_id},
	#{receiver_id},
	#{review_comment},
	#{review_img_link},
	SYSDATE
)
</insert>	

<!-- 거래 리뷰 checkbox 저장  -->
<insert id="insertUsedCheckboxSelectedReview">
	INSERT INTO used_checkbox_selected_review VALUES(
	used_checkbox_selected_review_seq.nextval,
	#{product_review_id},
	#{review_checkbox_category_id}
)
</insert>	

<!-- 내가 쓴 해당 거래에서 리뷰를 썼는지 개수 확인  -->
<select id="selectMyWroteReviewCount" resultType="int">
	SELECT count(*) FROM used_purchase_review WHERE purchase_request_id=#{requestId} AND sender_id=#{senderId}
</select>

<!-- 내가 쓴 해당 거래에서 리뷰 가져오기  -->
<select id="selectPurchaseReviewByRequestIdAndSenderId" resultType="com.ja.safari.dto.UsedPurchaseReviewDto">
	SELECT * FROM used_purchase_review 
	WHERE purchase_request_id=#{requestId} AND sender_id=#{senderId}
</select>

<!-- 내가 쓴 해당 거래에서 리뷰 체크박스 가져오기  -->
<select id="selectCheckboxSelectedReviewByRequestIdAndSenderId" resultType="com.ja.safari.dto.UsedReviewCheckboxCategoryDto">
	SELECT * FROM used_review_checkbox_category WHERE id IN 
	(SELECT review_checkbox_category_id FROM used_checkbox_selected_review WHERE product_review_id in 
	(SELECT id FROM used_purchase_review WHERE purchase_request_id=#{requestId} AND sender_id=#{senderId}))
	order by id
</select>


























</mapper>