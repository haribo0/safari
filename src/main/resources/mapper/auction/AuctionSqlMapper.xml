<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ja.safari.auction.mapper.AuctionSqlMapper">

	<!-- 경매 물품 등록 시퀀스 -->
	<select id="createPk" resultType="int">
		SELECT auction_item_seq.nextval FROM dual
	</select>

	<!-- 경매 물픔 등록 페이지 이동하면 대규모 카테고리 리스트 출력 -->
	<select id="getProductMainCategories" resultType="com.ja.safari.dto.ProductMainCategoryDto">
		SELECT * FROM product_main_category
	</select>

	<!-- 경매 물품 등록 시 대규모 카테고리 선택할 때 소규모 카테고리 리스트 출력 -->
	<select id="getProductSubCategoriesByMainCategoryId" resultType="com.ja.safari.dto.ProductSubCategoryDto">
		SELECT * FROM product_sub_category WHERE product_main_category_id = #{productMainCategoryId}
	</select>
	
	<!-- 물품의 대규모 카테고리는 무엇일까요? -->
	<select id="getProductMainCategory" resultType="com.ja.safari.dto.ProductMainCategoryDto">
		SELECT * FROM product_main_category WHERE id = #{id}
	</select>
	
	<!-- 물품의 소규모 카테고리는 무엇일까요? -->
	<select id="getProductSubCategory" resultType="com.ja.safari.dto.ProductSubCategoryDto">
		SELECT * FROM product_sub_category WHERE id = #{id}
	</select>
		
	<!-- 경매 등록 -->
	<insert id="registerAuctionProduct">
		INSERT INTO auction_item VALUES(
			#{id},
			#{user_seller_id},
			#{auction_sub_category_id},
			#{title},
			#{description},
			#{start_price},
			#{max_price},
			#{auction_status},
			#{start_date},
			#{end_date},
			SYSDATE
			)			
	</insert>
	
	<!-- 경매 물품 이미지 등록 -->
	<insert id="registerAuctionProductImage">
		INSERT INTO auction_item_img VALUES(
			auction_item_img_seq.nextval,
			#{auction_item_id},
			#{auction_item_img_link}
			)
	</insert>
	
	<!-- 경매 수정 -->
	<update id="modifyAuctionProduct">
		UPDATE 
				auction_item 
			SET
				auction_sub_category_id = #{auction_sub_category_id},
				title = #{title},
				description = #{description},
				start_price	= #{start_price},
				max_price = #{max_price},
				start_date = #{start_date},
				end_date = #{end_date},
				reg_date = SYSDATE
			WHERE
				id = #{id}	
	</update>
	
	<!-- 경매 이미지 수정 -->
	<update id="modifyAuctionProductImage">
		UPDATE 
				auction_item_img
			SET
				auction_item_img_link = #{auctionItemImgLink}
			WHERE
				id = #{id}	
	</update>	
	
	
	<!-- 경매 삭제 -->
	<delete id="removeAuctionProduct">
		DELETE FROM auction_item WHERE id = #{id}
	</delete>
	
	<!-- 경매 물품 이미지 삭제 -->
	<delete id="removeAuctionProductImage">
		DELETE FROM auction_item_img WHERE auction_item_id = #{auctionItemId}
	</delete>	
	
	<!--  경매 메인페이지에서 경매 리스트 조회 (물품 종류에 관계없이 전체보기) -->
	<select id="getAuctionList" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT *
			FROM auction_item
			ORDER BY 
			    CASE 
			        WHEN auction_status = '진행중' THEN 1
			        WHEN auction_status = '준비중' THEN 2
			        WHEN auction_status = '종료' THEN 3
			    END,
			    CASE 
			        WHEN auction_status IN ('진행중', '준비중') THEN end_date
			    END,
			    CASE 
			        WHEN auction_status = '종료' THEN end_date
			    END DESC
	</select>
	
	<!--  경매 메인페이지에서 경매 리스트 조회 시 메인 이미지 하나 출력 (물품 종류에 관계없이 전체보기) -->
	<select id="getAuctionImg" resultType="com.ja.safari.dto.AuctionItemImgDto">
		SELECT ROWNUM, ai.* 
		   FROM (
		   	SELECT * 
		    FROM auction_item_img 
		    WHERE auction_item_id = #{auctionItemId}
		    ORDER BY id
		    ) ai
		    <![CDATA[		      
		    WHERE ROWNUM <= 1	
		    ]]>
	</select>	
	
	<!--  경매 메인페이지에서 대규모 카테고리 조회 (그에 따른 소규모 카테고리 출력 위함)  -->
	<select id= "getProductMainCategoriesForMenu" resultType="com.ja.safari.dto.ProductMainCategoryDto">
		SELECT * FROM product_main_category
	</select> 
	
	<!--  경매 메인페이지에서 대규모 카테고리 클릭 시 그에 해당하는 경매 리스트 조회 -->
	<select id="getAuctionListByMainCategory" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT * FROM
		  auction_item a
		  WHERE a.auction_sub_category_id 
		 	 IN
			 (SELECT psc.id
			  FROM product_sub_category psc
			  JOIN product_main_category pmc ON psc.product_main_category_id = pmc.id
			  WHERE pmc.id = #{id})
			  ORDER BY 
			  	CASE 
			        WHEN auction_status = '진행중' THEN 1
			        WHEN auction_status = '준비중' THEN 2
			        WHEN auction_status = '종료' THEN 3
			    END,
			    CASE 
			        WHEN auction_status IN ('진행중', '준비중') THEN end_date
			    END,
			    CASE 
			        WHEN auction_status = '종료' THEN end_date
			    END DESC
	</select>

	<!--  경매 메인페이지에서 소규모 카테고리 클릭 시 그에 해당하는 경매 리스트 조회 -->
	<select id="getAuctionListBySubCategory" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT * FROM auction_item WHERE auction_sub_category_id = #{id} 
			ORDER BY 
				CASE 
			        WHEN auction_status = '진행중' THEN 1
			        WHEN auction_status = '준비중' THEN 2
			        WHEN auction_status = '종료' THEN 3
			    END,
			    CASE 
			        WHEN auction_status IN ('진행중', '준비중') THEN end_date
			    END,
			    CASE 
			        WHEN auction_status = '종료' THEN end_date
			    END DESC
	</select>
	
	
	<!-- 경매 메인페이지에서 상태에 따른 경매 조회 -->
	<select id="getAuctionListByStatus" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT * 
			FROM 
			auction_item 
			<if test="status != null">
				<choose>
					<when test="status == 'ing'">
						WHERE auction_status = '진행중'
					</when>
					<when test="status == 'ready'">
						WHERE auction_status = '준비중'
					</when>
				</choose>
			</if>
			ORDER BY end_date
	</select>
	
	<!-- 검색 -->
	<select id="searchAuction" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT * 
		  FROM auction_item
		  <if test="searchWord != null">
		  		WHERE lower(title) LIKE '%' || lower(#{searchWord}) || '%'
		  </if>
		  	ORDER BY 
				CASE auction_status 
			        WHEN '진행중' THEN 1 
			        WHEN '준비중' THEN 2 
			        WHEN '종료' THEN 3 
			    END,
			    end_date
	</select>


	<!--  경매 물품 상세페이지  -->
	<select id="getAuctionProductDetail" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT * FROM auction_item WHERE id = #{id}
	</select>
	
	<!--  경매 물품 상세페이지 (이미지)  -->
	<select id="getAuctionProductImages" resultType="com.ja.safari.dto.AuctionItemImgDto">
		SELECT * FROM auction_item_img WHERE auction_item_id = #{auctionItemId} ORDER BY id
	</select>	
	
	<!-- 경매 물품 소규모 카테고리명 조회 -->
	<select id="getAuctionProductSubCategory" resultType="com.ja.safari.dto.ProductSubCategoryDto">
		SELECT * FROM product_sub_category WHERE id = #{id}
	</select>
	
	
	<!-- 경매 상품 문의 등록 -->
	<insert id="registerAuctionInquiry">
		INSERT INTO auction_item_inquiry VALUES(
			  auction_item_inquiry_seq.nextval,
			  #{auction_item_id},
			  #{user_buyer_id},
			  #{content},
			  SYSDATE)
	</insert>
	
	<!-- 경매 상품 문의 삭제 -->
	<delete id="removeAuctionInquiry">
		DELETE FROM auction_item_inquiry WHERE id = #{id}
	</delete>

	<!-- 경매 상품 문의 답변 등록 -->
	<insert id="registerAuctionReply">
		INSERT INTO auction_item_reply VALUES(
		  auction_item_reply_seq.nextval,
		  #{auction_item_inquiry_id},
		  #{user_seller_id},
		  #{content},
		  SYSDATE)
	</insert>
	
	<!-- 경매 상품 문의 답변 삭제 -->
	<delete id="removeAuctionReply">
		DELETE FROM auction_item_reply WHERE id = #{id}
	</delete>
	

	<!-- 경매 상품 당 문의 리스트 조회 -->
	<select id="getAuctionQnAList" resultType="com.ja.safari.dto.AuctionQnADto">
	  SELECT ati.id AS inquiryId, ut_buyer.id AS buyer_id, ut_buyer.nickname AS buyer_nickname,
	       	 ati.content AS inquiry_content, ati.reg_date AS inquiry_reg_date,
	         atr.id AS replyId, ut_seller.id AS seller_id, ut_seller.nickname AS seller_nickname,
	         atr.content AS reply_content, atr.reg_date AS reply_reg_date
		  FROM auction_item_inquiry ati
		    LEFT JOIN auction_item_reply atr ON ati.id = atr.auction_item_inquiry_id
		    JOIN user_table ut_buyer ON ut_buyer.id = ati.user_buyer_id
		    LEFT JOIN user_table ut_seller ON ut_seller.id = atr.user_seller_id
		  WHERE ati.auction_item_id = #{auctionItemId}
		  ORDER BY inquiry_reg_date DESC
	</select>
	
	
	
	<!--  경매 종료 시간 실시간으로 받아오기 -->
	<select id="getAuctionEndTimeInRealTime" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT end_date FROM auction_item WHERE id = #{auctionItemId}
	</select>


	<!-- 입찰하기 -->
	<insert id="submitBidRequest">
		INSERT INTO auction_item_bid_request VALUES(
			auction_item_bid_request_seq.nextval,
			#{auction_item_id},
			#{user_buyer_id},
			#{bid_price},
			SYSDATE
		)
	</insert>
	

	<!-- 입찰하기 직전 내가 입찰할 수 있는 금액인지 확인 (동시성) -->
	<select id="checkBidAttemptYn" resultType="int">
	       SELECT NVL(MAX(bid_price), 0)
        		  FROM auction_item_bid_request 
       			  WHERE auction_item_id = #{auctionItemId}
	</select>
	
	<!-- 입찰하기 버튼 갱신하기 위해 경매 상태 확인 -->
	<select id="getStatusForRenewInputBidBox" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT start_date, end_date, auction_status 
		    FROM auction_item
		    WHERE id = #{id}
	</select>
	
	<!-- 입찰 정보 확인 -->
	<select id="getBidInfo" resultType="com.ja.safari.dto.AuctionBidDto">
		SELECT * FROM auction_item_bid_request WHERE id = #{id}
	</select>
	
	
	<!-- 한 경매의 입찰 리스트 출력 -->
	<select id="getBidList" resultType="com.ja.safari.dto.AuctionBidDto">
		SELECT * 
			FROM 
		    	auction_item_bid_request 
		    WHERE 
		    	auction_item_id = #{auctionItemId}
		    ORDER BY id DESC
	</select>
	
	<!-- 한 경매의 입찰 횟수 조회 -->
	<select id="getBidCount" resultType="int">
		SELECT COUNT(DISTINCT(user_buyer_id)) 
			FROM 
		    	auction_item_bid_request 
		    WHERE 
		    	auction_item_id = #{auctionItemId}
	
	</select>	
	
	<!-- 한 경매의 입찰 순위 3위까지 출력 -->
	<select id="getAuctionTop3BidPrice" resultType="com.ja.safari.dto.AuctionBidDto">
		SELECT ROWNUM rm, br.* 
		    FROM (
		    	SELECT *
				    FROM auction_item_bid_request 
				    WHERE auction_item_id = #{auctionItemId}
				    ORDER BY bid_price DESC) br
			<![CDATA[		    
		    WHERE ROWNUM <= 3
		    ]]>
	</select>
	
	<!-- 현 시간 각 경매의 최고 입찰자가 누구인지 회원pk로 출력하기 -->
	<select id="checkNowMaxBiderByAuctionItemId" resultType="int">
			SELECT user_buyer_id 
			   FROM (
				   	SELECT * 
				    FROM auction_item_bid_request 
				    WHERE auction_item_id = #{auctionItemId}
				    ORDER BY bid_price DESC
			    )
		     <![CDATA[	
		   	  WHERE ROWNUM <= 1
		     ]]>
	
	</select>
	
	<!-- 종료 시간이 1분 미만일 때 입찰하였을 경우, 경매 종료 시간 1분 늘리기 -->
	<update id="renewEndTimeAuctionItem">
		UPDATE auction_item									<!-- INTERVAL '30' SECOND -->
			SET end_date = end_date + INTERVAL '1' MINUTE  <!---->
			WHERE id = #{auctionItemId}
	</update>
	
	
	<!-- 경매 현재 가격 계속 업데이트 -->
	<select id="getCurrentBidPriceByAuctionItem" resultType="int">
		SELECT MAX(bid_price) bid_price
		  FROM auction_item_bid_request 
		  WHERE auction_item_id = #{auctionItemId}
	</select>
	
	<!-- 경매 입찰 가격이 즉시 낙찰 가격 이상인지 여부 확인 -->
	<select id="isBidPriceGreaterThanOrEqualToMaxPrice" resultType="com.ja.safari.dto.AuctionBidDto">
		SELECT * FROM 
		  auction_item_bid_request 
		  WHERE auction_item_id = #{auctionItemId}
		  AND bid_price >= 
		      (SELECT max_price FROM auction_item WHERE id = #{auctionItemId})		
	</select>
	
	<!-- 즉시 낙찰 시 경매 종료로 날짜 상태 업데이트 -->
	<update id="renewImmediateSuccessfulBidEndDate">
		UPDATE auction_item
			SET end_date = SYSDATE  
			WHERE id = #{auctionItemId}
	</update>	
	
	<!-- 경매 상세페이지에서 내 입찰목록 (진행중) 조회 -->
	<select id="getMyBidListIng" resultType="com.ja.safari.dto.AuctionItemDto">
		 SELECT at.id, title, bid_price, end_date, auction_item_img_link, auction_status
			FROM auction_item at 
			JOIN auction_item_bid_request bt ON at.id = bt.auction_item_id
			JOIN (
			    SELECT auction_item_id, MIN(auction_item_img_link) AS auction_item_img_link
			    FROM auction_item_img
			    GROUP BY auction_item_id
			) ati ON at.id = ati.auction_item_id
			WHERE bt.user_buyer_id = #{userBuyerId}
			  AND auction_status = '진행중'
			  AND bid_price = (
			    SELECT MAX(bid_price)
			    FROM auction_item_bid_request
			    WHERE auction_item_id = at.id AND user_buyer_id = #{userBuyerId}
			  )
			ORDER BY bt.reg_date DESC
	</select>
	
	<!--  경매 상세페이지에서 입찰 리스트 중 입찰가만 계속 조회 -->
	<select id="getMyBidPrice" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT at.id, bid_price
			FROM auction_item at 
			JOIN auction_item_bid_request bt ON at.id = bt.auction_item_id
			WHERE bt.user_buyer_id = #{userBuyerId}
			  AND auction_status = '진행중'
			  AND bid_price = (
			    SELECT MAX(bid_price)
			    FROM auction_item_bid_request
			    WHERE auction_item_id = at.id AND user_buyer_id = #{userBuyerId}
			  )
			ORDER BY bt.reg_date DESC
	</select>
	
	<!--  회원의 경매 입찰 수 -->
	<select id="getUserBidCount" resultType="int">
	 SELECT COUNT(*) 
	        FROM auction_item_bid_request bt
	        JOIN auction_item at ON bt.auction_item_id = at.id
	        WHERE auction_status = '진행중'
	              AND user_buyer_id = #{userBuyerId}
	</select>
	
	<!--  회원의 입찰 기록 조회 -->
	<select id="getBidHistoryByUser" resultType="com.ja.safari.dto.AuctionBidDto">
		SELECT * FROM auction_item_bid_request WHERE user_buyer_id = #{userBuyerId} 
	</select>
	
	<!-- 회원의 경매 업로드 기록 조회 -->
	<select id="getAuctionUploadHistoryByUser" resultType="com.ja.safari.dto.AuctionItemDto">
		 SELECT * FROM auction_item WHERE user_seller_id = #{userSellerId}
	</select>
	
	<!-- 경매 물품 현재 상황 조회 -->
	<select id="getAuctionStatusByAuctionItemId" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT start_date, end_date, auction_status, title
		  FROM auction_item
		  WHERE id = #{id}
	</select>
	
	
	<!--  경매 종료일 도달 시 경매 종료 처리 -->
	<update id="renewAuctionItemStatusEnd">
		UPDATE auction_item
			SET auction_status = '종료'
			WHERE id = #{id}	
	</update>
	
	<!--  경매 시작일 도달 시 진행중 처리 -->
	<update id="renewAuctionItemStatusIng">
		UPDATE auction_item
			SET auction_status = '진행중'
			WHERE id = #{id}
	
	</update>
	
	<!--  카운트다운 -->
	<select id="getAuctionCountDown" resultType="com.ja.safari.dto.AuctionItemDto">
		  	SELECT start_date, end_date, auction_status
			  FROM auction_item
			  WHERE id = #{id}
	</select>
	

	
	
	<!-- 낙찰 시 경매 종료로 상태 업데이트 -->
<!-- 	<update id="renewImmediateSuccessfulBid">
		UPDATE auction_item
			SET auction_status = '종료'
			WHERE id = #{id}
	</update> -->
	

	
	<!-- 경매 찜하기 클릭 -->
	<insert id="likeAuctionProduct">
		INSERT INTO auction_item_like VALUES(
			 auction_item_like_seq.nextval,
			 #{auction_item_id},
			 #{user_buyer_id},
			 SYSDATE
		)	
	</insert>
	
	<!-- 경매 좋아요 취소 -->
	<delete id="unlikeAuctionProduct">
		DELETE FROM auction_item_like
			WHERE auction_item_id = #{auction_item_id} AND
				  user_buyer_id = #{user_buyer_id}
	</delete>
	
	<!-- 고객 당 경매 좋아요 누른 개수 확인 -->
	<select id="checklikeAuctionProductByUser" resultType="int">
		SELECT COUNT(*) 
			FROM 
				auction_item_like
			WHERE 
				auction_item_id = #{auction_item_id} AND
				user_buyer_id = #{user_buyer_id}
	</select>	
	
	
	<!--  경매물품 당 좋아요 개수 -->
	<select id="countLikeAuctionProduct" resultType="int">
		SELECT COUNT(*) 
		FROM auction_item_like
		WHERE auction_item_id = #{auctionItemId}
	</select>	


	<!--  경매 채팅방에서 채팅 입력 -->
	<insert id="sendMessageInAuctionChatroom">
		INSERT INTO	auction_item_chatroom VALUES(
			auction_item_chatroom_seq.nextval,
			#{auction_item_id},
			#{user_id},
			#{content},
			SYSDATE
		)
	</insert>
	
	<!--  경매 채팅방에서 채팅 기록 조회 -->
	<select id="getChatHistoryInAuctionChatroom" resultType="com.ja.safari.dto.AuctionItemChatroomDto">
		SELECT * FROM auction_item_chatroom WHERE auction_item_id = #{auctionItemId} ORDER BY id 
	</select>
	
	<!--  경매 채팅방에서 내 채팅 삭제 -->
	<delete id="removeMessageInAuctionChatroom">
		DELETE FROM auction_item_chatroom WHERE id = #{id}
	</delete>
	
	
	<!-- 경매 채팅방에 있는 입찰기록을 모두 삭제 (임시, 사용하면 안되는데 테스트용) -->
	<delete id="deleteAllBid">
		DELETE FROM auction_item_bid_request WHERE auction_item_id = #{id}
	</delete>
	
	<!-- 경매 채팅방에 있는 채팅을 모두 삭제 (임시, 사용하면 안되는데 테스트용) -->
	<delete id="deleteAllChat">
		DELETE FROM auction_item_chatroom WHERE auction_item_id = #{id}
	</delete>
	
	<!--  경매 좋아요 삭제 (임시, 사용하면 안되는데 테스트용) -->
	<delete id="deleteAllLike">
		DELETE FROM auction_item_like WHERE auction_item_id = #{id}
	</delete>
	
	
	<!--  마이페이지 - 내가 입찰한 기록 조회 (시간 업데이트 용도, id값만 필요함) -->
<!-- 	<select id="getMyBidListForRealTime" resultType="com.ja.safari.dto.AuctionBidDto">
	 SELECT * 
		FROM 
		auction_item_bid_request
		WHERE user_buyer_id = #{userBuyerId}
		      AND bid_price IN (
				        SELECT MAX(bid_price) 
				            FROM auction_item_bid_request bt
				            WHERE user_buyer_id = #{userBuyerId}
				            GROUP BY auction_item_id)
	</select>
 -->
	
	
	
	<!-- 마이페이지 - 내가 입찰한 기록 조회 -->
	<select id="getMyBidList" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT at.id, title,
		       bid_price, end_date, 
		       auction_item_img_link,
		       auction_status,
		       main_category_name, sub_category_name
		FROM auction_item at 
		JOIN (
		    SELECT auction_item_id, MAX(bid_price) AS max_bid_price
		    FROM auction_item_bid_request
		    WHERE user_buyer_id = #{userBuyerId}
		    GROUP BY auction_item_id
		) max_bid ON at.id = max_bid.auction_item_id
		JOIN auction_item_bid_request bt ON at.id = bt.auction_item_id AND bt.bid_price = max_bid.max_bid_price
		JOIN product_sub_category psc ON at.auction_sub_category_id = psc.id
		JOIN product_main_category pmc ON psc.product_main_category_id = pmc.id
		JOIN (
		    SELECT ai.*
		    FROM auction_item_img ai
		    JOIN (
		        SELECT auction_item_id, MIN(id) AS min_id
		        FROM auction_item_img
		        GROUP BY auction_item_id
		    ) min_img ON ai.auction_item_id = min_img.auction_item_id AND ai.id = min_img.min_id
		) ati ON at.id = ati.auction_item_id
		WHERE bt.user_buyer_id = #{userBuyerId}
		ORDER BY bt.reg_date DESC
	</select>
	
	
	
	<!-- 낙찰된 경매 하나하나 결제하기 위해 주문 창 조회 -->
	<select id="getOrderPageBySuccessBidPk" resultType="com.ja.safari.dto.AuctionItemOrderPaymentDto">
		SELECT bt.id, bt.auction_item_id, main_category_name, sub_category_name, title, bid_price,
			   bt.reg_date, at.end_date, ati.auction_item_img_link, ut.email, ut.nickname, ut.phone
			FROM auction_item_bid_request bt
			JOIN auction_item at ON bt.auction_item_id = at.id
			JOIN product_sub_category psc ON at.auction_sub_category_id = psc.id
			JOIN product_main_category pmc ON psc.product_main_category_id = pmc.id
      		JOIN user_table ut ON ut.id = at.user_seller_id
			JOIN (
		    SELECT ai.*
		    FROM auction_item_img ai
		    JOIN (
		        SELECT auction_item_id, MIN(id) AS min_id
		        FROM auction_item_img
		        GROUP BY auction_item_id
		    ) min_img ON ai.auction_item_id = min_img.auction_item_id AND ai.id = min_img.min_id
			) ati ON at.id = ati.auction_item_id
			WHERE bt.user_buyer_id = #{user_buyer_id} AND bt.id = #{id}
			AND at.auction_status = '종료'
			AND bid_price IN (
			    SELECT MAX(bid_price)
			    FROM auction_item_bid_request
			    WHERE auction_item_id = bt.auction_item_id
			)	
			
	</select>
	
	
	<!-- 주문화면에서 배송지 변경 버튼 클릭 후 설정된 조회 -->
	<select id="getMyAddressListInOrderPage" resultType="com.ja.safari.dto.UserAddressDto">
		SELECT * FROM user_address_table WHERE user_id = #{userId} ORDER BY id DESC	
	</select>
	
	<!--  주문화면에서 설정하였던 배송지 수 출력 -->
	<select id="getMyAddressCount" resultType="int">
		SELECT COUNT(*) FROM user_address_table WHERE user_id = #{userId}
	</select>
	
	<!-- 주문화면에서 배송지 변경 모달에서 주소 선택 -->
	<select id="changeAddressInOrderPage" resultType="com.ja.safari.dto.UserAddressDto">
		SELECT * FROM user_address_table WHERE user_id = #{user_id} AND id = #{id}
	</select>
	
	
	
	
	<!-- 경매 마이페이지 - 낙찰 기록 조회 successBidList -->
	<select id="getMySueecssfulBidList" resultType="com.ja.safari.dto.AuctionBidDto">
		SELECT bt.id, bt.auction_item_id, main_category_name, sub_category_name, title, bid_price,
		       bt.reg_date, at.end_date, ati.auction_item_img_link,
		       CASE WHEN akp.partner_order_id IS NOT NULL THEN 'Yes' ELSE 'No' END AS payment_exists
		  FROM auction_item_bid_request bt
			JOIN auction_item at ON bt.auction_item_id = at.id
			JOIN product_sub_category psc ON at.auction_sub_category_id = psc.id
			JOIN product_main_category pmc ON psc.product_main_category_id = pmc.id
			JOIN (
			    SELECT auction_item_id, MAX(bid_price) AS max_bid_price  
			    FROM auction_item_bid_request
			    GROUP BY auction_item_id
			) max_bt ON bt.auction_item_id = max_bt.auction_item_id AND bt.bid_price = max_bt.max_bid_price 
			JOIN (
		    SELECT ai.*
		    FROM auction_item_img ai
		    JOIN (
		        SELECT auction_item_id, MIN(id) AS min_id
		        FROM auction_item_img
		        GROUP BY auction_item_id
		    ) min_img ON ai.auction_item_id = min_img.auction_item_id AND ai.id = min_img.min_id
			) ati ON at.id = ati.auction_item_id
			LEFT JOIN auction_kakao_payment akp ON bt.id = akp.partner_order_id
			WHERE bt.user_buyer_id = #{userBuyerId}
			  AND at.auction_status = '종료'
			ORDER BY at.end_date DESC
	</select>
	
	<!-- 경매 마이페이지 - 낙찰된 건 (배송 조회) -->
	<select id="getMySuccessfulBidPayAndDeliveryStatusList" resultType="com.ja.safari.dto.AuctionBidDto">
	 		SELECT
			    t1.id, t1.auction_item_id, t1.title, t1.user_buyer_id,
			    t1.user_seller_id, t1.nickname, t1.payment_exists, t1.amount,
			    CASE WHEN dt.partner_order_id IS NOT NULL THEN 'Yes' ELSE 'No' END AS delivery_exists,
			    akp.reg_date AS payment_reg_date,
			    dt.reg_date AS delivery_reg_date,
			    CASE WHEN pc.partner_order_id IS NOT NULL THEN 'Yes' ELSE 'No' END AS purchase_confirmed,
			    dt.delivery_status AS delivery_status, 
			    ati.auction_item_img_link AS auction_item_img_link
			FROM (
			    SELECT
			        bt.id, bt.auction_item_id, at.user_seller_id, at.title, ut.nickname, bt.user_buyer_id,
             		               akp.amount,
			        CASE WHEN akp.partner_order_id IS NOT NULL THEN 'Yes' ELSE 'No' END AS payment_exists
			    FROM
			        auction_item_bid_request bt
			        LEFT JOIN auction_kakao_payment akp ON bt.id = akp.partner_order_id
			        JOIN auction_item at ON at.id = bt.auction_item_id
			        JOIN user_table ut ON ut.id = at.user_seller_id
              JOIN (
			    SELECT auction_item_id, MAX(bid_price) AS max_bid_price  
			    FROM auction_item_bid_request
			    GROUP BY auction_item_id
			) max_bt ON bt.auction_item_id = max_bt.auction_item_id AND bt.bid_price = max_bt.max_bid_price 
			    WHERE
			        bt.user_buyer_id = #{user_buyer_id}
			        AND at.auction_status = '종료'
			        
			) t1
			LEFT JOIN auction_delivery_after_payment dt ON t1.id = dt.partner_order_id
			LEFT JOIN auction_purchase_confirmed pc ON pc.partner_order_id = t1.id
			LEFT JOIN auction_kakao_payment akp ON t1.id = akp.partner_order_id
			JOIN (
			    SELECT
			        auction_item_id,
			        MIN(auction_item_img_link) AS auction_item_img_link
			    FROM
			        auction_item_img
			    GROUP BY
			        auction_item_id
			) ati ON t1.auction_item_id = ati.auction_item_id
<!--      		WHERE t1.id = #{id} -->    
	
	</select>
	
	
	<!--  낙찰목록 당 배송 조회 (배송 조회 모달 출력 형태 ) -->
	<select id="getDeliveryStatusInSuccessfulBid" resultType="com.ja.safari.dto.AuctionDeliveryTrackingDto">
			SELECT
			    t1.id, t1.auction_item_id, t1.title, t1.user_buyer_id,
			    t1.user_seller_id, t1.nickname, t1.payment_exists, t1.amount,
			    CASE WHEN dt.partner_order_id IS NOT NULL THEN 'Yes' ELSE 'No' END AS delivery_exists,
			    akp.reg_date AS payment_reg_date,
			    dt.reg_date AS delivery_reg_date,
			    CASE WHEN pc.partner_order_id IS NOT NULL THEN 'Yes' ELSE 'No' END AS purchase_confirmed,
			    dt.delivery_status AS delivery_status, 
			    ati.auction_item_img_link AS auction_item_img_link
			FROM (
			    SELECT
			        bt.id, bt.auction_item_id, at.user_seller_id, at.title, ut.nickname, bt.user_buyer_id,
             		               akp.amount,
			        CASE WHEN akp.partner_order_id IS NOT NULL THEN 'Yes' ELSE 'No' END AS payment_exists
			    FROM
			        auction_item_bid_request bt
			        LEFT JOIN auction_kakao_payment akp ON bt.id = akp.partner_order_id
			        JOIN auction_item at ON at.id = bt.auction_item_id
			        JOIN user_table ut ON ut.id = at.user_seller_id
              JOIN (
			    SELECT auction_item_id, MAX(bid_price) AS max_bid_price  
			    FROM auction_item_bid_request
			    GROUP BY auction_item_id
			) max_bt ON bt.auction_item_id = max_bt.auction_item_id AND bt.bid_price = max_bt.max_bid_price 
			    WHERE
			        bt.user_buyer_id = #{user_buyer_id}
			        AND at.auction_status = '종료'
			        
			) t1
			LEFT JOIN auction_delivery_after_payment dt ON t1.id = dt.partner_order_id
			LEFT JOIN auction_purchase_confirmed pc ON pc.partner_order_id = t1.id
			LEFT JOIN auction_kakao_payment akp ON t1.id = akp.partner_order_id
			JOIN (
			    SELECT
			        auction_item_id,
			        MIN(auction_item_img_link) AS auction_item_img_link
			    FROM
			        auction_item_img
			    GROUP BY
			        auction_item_id
			) ati ON t1.auction_item_id = ati.auction_item_id
      	WHERE t1.id = #{id} 
      </select>
	
	
	
	
	<!-- 경매 마이페이지 - 찜 목록 (시간 업데이트용) -->
	<select id="getMyWishListForRealTime" resultType="com.ja.safari.dto.AuctionItemLikeDto">
		 SELECT * 
				FROM auction_item_like
	     		 WHERE user_buyer_id = #{userBuyerId}
	</select>
	
	
	<!-- 경매 마이페이지 - 찜 목록 조회 -->
	<select id="getMyAuctionWishList" resultType="com.ja.safari.dto.AuctionItemDto">
		 SELECT at.id, title, max_price, 
		        main_category_name, sub_category_name,
		        auction_item_img_link
		        FROM
		        auction_item at 
		        JOIN auction_item_like atl ON at.id = atl.auction_item_id
		        JOIN product_sub_category psc ON at.auction_sub_category_id = psc.id
		        JOIN product_main_category pmc ON psc.product_main_category_id = pmc.id
		        JOIN (
				    SELECT ai.*
				    FROM auction_item_img ai
				    JOIN (
				        SELECT auction_item_id, MIN(id) AS min_id
				        FROM auction_item_img
				        GROUP BY auction_item_id
				    ) min_img ON ai.auction_item_id = min_img.auction_item_id AND ai.id = min_img.min_id
				) ati ON at.id = ati.auction_item_id
		        WHERE user_buyer_id = #{userBuyerId}
		        AND at.auction_status IN ('진행중','준비중')
	</select>
	
	
	<!-- 경매 낙찰 건에 대한 카카오페이 결제 정보 저장 -->
	<insert id="saveAuctionKakaoPayInfo">
		INSERT INTO auction_kakao_payment VALUES(
			auction_kakao_payment_seq.nextval,
			#{partner_order_id},
			#{cid},
			#{tid},
			#{partner_user_id},
			#{pg_token},
			#{item_name},
			#{amount},
			#{payment_method_type},
			SYSDATE)
	</insert>
	
	<!--  경매 낙찰 후 결제하여 코인 차감 -->
	<insert id="reduceUserCoinByAuction">
		INSERT INTO coin_table VALUES(
			coin_table_seq.nextval,
			#{user_id},
			#{coin_transaction},
			'M',
			'낙찰한 경매 상품 결제',
			SYSDATE
			)
	</insert>
	
	<!-- 구매자가 경매 낙찰 후 결제하면 판매자는 코인 획득 -->
	<insert id="increaseUserCoinByAuction">
		INSERT INTO coin_table VALUES(
			coin_table_seq.nextval,
			#{user_id},
			#{coin_transaction},
			'P',
			'업로드한 경매 상품 결제 완료',
			SYSDATE
			)
	</insert>
	
	<!-- 구매자 결제 시 배송 정보 저장하는 dto insert -->
	<insert id="registerAddressInfoInPayment">
		INSERT INTO auction_item_order_address VALUES(
			#{id},
			#{address},
			#{phone},
			#{delivery_message}
		)

	</insert>
	
	<!--  배송 조회 시 배송 상세 정보 조회 -->
	<select id="getAddressInfoInPaymentAndDelivery" resultType="com.ja.safari.dto.AuctionItemOrderAddressDto">
		SELECT * FROM auction_item_order_address WHERE id = #{id}
	</select>
	

	
	<!-- 결제 시 경매 판매자 정보 조회  -->
	<select id="getUserSellerInfoByAuctionPay" resultType="com.ja.safari.dto.UserDto">
	    SELECT ut.id 
	          FROM user_table ut
	          JOIN auction_item at ON ut.id = at.user_seller_id 
			      JOIN (
			        SELECT *
			        FROM 
			        auction_kakao_payment akp 
			        JOIN auction_item_bid_request bt ON bt.id = akp.partner_order_id
			         WHERE akp.partner_order_id = #{partnerOrderId}) st
			        ON st.auction_item_id = at.id
	
	</select>
	
	
	
	<!-- 경매 낙찰 건에 대한 카카오페이 결제 정보 조회 -->
	<select id="getAuctionKakaoPayInfo" resultType="com.ja.safari.dto.AuctionKakaoPayApproveDto">
		SELECT *
			FROM auction_kakao_payment
			WHERE partner_order_id = #{id}
	</select>
	
	<!--  결제 정보 삭제 (테스트 데이터 삭제 위함 사실 절대 사용하면 안됨 -->
	<delete id="removePayData">
		DELETE FROM auction_kakao_payment
		WHERE partner_order_id IN (
		    SELECT akp.partner_order_id
		    FROM auction_kakao_payment akp
		    JOIN auction_item_bid_request bt ON akp.partner_order_id = bt.id
		    WHERE bt.auction_item_id = #{auctionItemId}
		)	
	</delete>
	
	<!--  경매 업로더 입장에서 전체 경매 목록 조회 -->
	<select id="getAuctionInfoByUploader" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT
		    at.id,
		    at.title,
		    at.auction_status,
		    pmc.main_category_name,
		    psc.sub_category_name,
		    ai.auction_item_img_link
		FROM
		    auction_item at
		JOIN
		    product_sub_category psc ON at.auction_sub_category_id = psc.id
		JOIN
		    product_main_category pmc ON psc.product_main_category_id = pmc.id
		JOIN (
		    SELECT ai.*
		    FROM auction_item_img ai
		    JOIN (
		        SELECT auction_item_id, MIN(id) AS min_id
		        FROM auction_item_img
		        GROUP BY auction_item_id
		    ) min_img ON ai.auction_item_id = min_img.auction_item_id AND ai.id = min_img.min_id
		) ai ON at.id = ai.auction_item_id
		WHERE
		    at.user_seller_id = #{userSellerId}
	
	</select>
	
	
	<!--  경매 업로더 입장에서 낙찰자 정보와 경매 물품 정보 조회 -->
	<select id="getAuctionAndBidInfoByUploader" resultType="com.ja.safari.dto.AuctionBidDto">
			SELECT
			    bt.id, bt.auction_item_id, bt.user_buyer_id, ut.nickname,
			    pmc.main_category_name, psc.sub_category_name, at.title,
			    bt.bid_price, at.end_date, ati.auction_item_img_link,
			    CASE WHEN akp.partner_order_id IS NOT NULL THEN 'Yes' ELSE 'No' END AS payment_exists
			FROM
			    auction_item_bid_request bt
			JOIN
			    auction_item at ON bt.auction_item_id = at.id
			JOIN
			    product_sub_category psc ON at.auction_sub_category_id = psc.id
			JOIN
			    product_main_category pmc ON psc.product_main_category_id = pmc.id
	    	JOIN (
				    SELECT auction_item_id, MAX(bid_price) AS max_bid_price  
				    FROM auction_item_bid_request
				    GROUP BY auction_item_id
				) max_bt ON bt.auction_item_id = max_bt.auction_item_id AND bt.bid_price = max_bt.max_bid_price     
			JOIN (
			    SELECT ai.*
			    FROM auction_item_img ai
			    JOIN (
			        SELECT auction_item_id, MIN(id) AS min_id
			        FROM auction_item_img
			        GROUP BY auction_item_id
			    ) min_img ON ai.auction_item_id = min_img.auction_item_id AND ai.id = min_img.min_id
			) ati ON at.id = ati.auction_item_id
			LEFT JOIN
			    auction_kakao_payment akp ON bt.id = akp.partner_order_id
			JOIN
			    user_table ut ON bt.user_buyer_id = ut.id
			WHERE
			    at.user_seller_id = #{userSellerId}	
			    AND at.auction_status = '종료'
			    AND bt.bid_price IN (
			        SELECT
			            MAX(bid_price)
			        FROM
			            auction_item_bid_request
			        GROUP BY
			            auction_item_id
			    ) ORDER BY at.end_date DESC
	</select>
	
	
	<!-- 최고입찰자, 낙찰자 조회 -->
	<select id="getMaxBiderNickname" resultType="com.ja.safari.dto.AuctionBidDto">
     	SELECT
		    ut.nickname
      	FROM
			auction_item_bid_request bt
			JOIN
			    user_table ut ON bt.user_buyer_id = ut.id
			JOIN
			    (
		         SELECT
		            auction_item_id,
		            MAX(bid_price) AS bid_price
		         FROM
		            auction_item_bid_request
		         GROUP BY
		            auction_item_id
			    ) max_bid_table
			    ON bt.auction_item_id = max_bid_table.auction_item_id 
			    AND bt.bid_price = max_bid_table.bid_price
			JOIN
			    auction_item at ON bt.auction_item_id = at.id
			WHERE
			    at.user_seller_id = #{userSellerId} AND
          		bt.auction_item_id = #{auctionItemId}
	
	</select>
	
	<!-- 경매 업로더 입장에서 결제 여부 조회 -->
	<select id="getPayYnByUploader" resultType="com.ja.safari.dto.AuctionBidDto">
		SELECT bt.auction_item_id, 
		       CASE WHEN akp.partner_order_id IS NOT NULL THEN 'Yes' ELSE 'No' END AS payment_exists
			FROM auction_item_bid_request bt
			JOIN auction_item at ON bt.auction_item_id = at.id
      		JOIN (
			    SELECT auction_item_id, MAX(bid_price) AS max_bid_price  
			    FROM auction_item_bid_request
			    GROUP BY auction_item_id
			) max_bt ON bt.auction_item_id = max_bt.auction_item_id AND bt.bid_price = max_bt.max_bid_price     
			LEFT JOIN auction_kakao_payment akp ON bt.id = akp.partner_order_id
			WHERE at.user_seller_id = #{userSellerId}
			AND at.auction_status = '종료'
			AND bid_price IN (
			    SELECT MAX(bid_price)
			    FROM auction_item_bid_request
			    GROUP BY auction_item_id
			) ORDER BY at.end_date DESC	 
	</select>
	
	
	<!-- 경매 업로더 - 종료된 경매에서 상품 정보와 결제 상태 확인 -->
	<select id="getEndedAuctionAndPayYnInfoByUploader" resultType="com.ja.safari.dto.AuctionBidDto">
		SELECT
		    bt.id, bt.auction_item_id, bt.user_buyer_id, ut.nickname,
		    pmc.main_category_name, psc.sub_category_name, at.title,
		    bt.bid_price, at.end_date, ati.auction_item_img_link,
		    CASE WHEN akp.partner_order_id IS NOT NULL THEN 'Yes' ELSE 'No' END AS payment_exists
		FROM
		    auction_item_bid_request bt
		JOIN
		    auction_item at ON bt.auction_item_id = at.id
		JOIN
		    product_sub_category psc ON at.auction_sub_category_id = psc.id
		JOIN
		    product_main_category pmc ON psc.product_main_category_id = pmc.id
   		JOIN (
			    SELECT auction_item_id, MAX(bid_price) AS max_bid_price  
			    FROM auction_item_bid_request
			    GROUP BY auction_item_id
			) max_bt ON bt.auction_item_id = max_bt.auction_item_id AND bt.bid_price = max_bt.max_bid_price             
		JOIN (
		    SELECT ai.*
		    FROM auction_item_img ai
		    JOIN (
		        SELECT auction_item_id, MIN(id) AS min_id
		        FROM auction_item_img
		        GROUP BY auction_item_id
		    ) min_img ON ai.auction_item_id = min_img.auction_item_id AND ai.id = min_img.min_id
		) ati ON at.id = ati.auction_item_id
		LEFT JOIN
		    auction_kakao_payment akp ON bt.id = akp.partner_order_id
		JOIN
		    user_table ut ON bt.user_buyer_id = ut.id
		WHERE
		    at.user_seller_id = #{userSellerId}
		    AND at.auction_status = '종료'
		    AND bt.bid_price IN (
		        SELECT
		            MAX(bid_price)
		        FROM
		            auction_item_bid_request
		        GROUP BY
		            auction_item_id
		    ) ORDER BY at.end_date DESC
	
	</select>
	
	
	<!--  경매 업로더의 입장에서 종료된 경매 리스트 상태 (결제, 배송) 조회 -->
	<select id="getEndedAuctionlist" resultType="com.ja.safari.dto.AuctionBidDto">
		  SELECT
			    bt.id, bt.auction_item_id, bt.user_buyer_id, ut.nickname,
			    pmc.main_category_name, psc.sub_category_name, at.title,
			    bt.bid_price, at.end_date, ati.auction_item_img_link, akp.reg_date AS payment_reg_date,
	            dt.reg_date AS delivery_reg_date,
	            CASE WHEN dt.partner_order_id IS NOT NULL THEN 'Yes' ELSE 'No' END AS delivery_exists,
			    CASE WHEN akp.partner_order_id IS NOT NULL THEN 'Yes' ELSE 'No' END AS payment_exists,
	            CASE WHEN pc.partner_order_id IS NOT NULL THEN 'Yes' ELSE 'No' END AS purchase_confirmed_exists
			FROM
			    auction_item_bid_request bt
			JOIN
			    auction_item at ON bt.auction_item_id = at.id
			JOIN
			    product_sub_category psc ON at.auction_sub_category_id = psc.id
			JOIN
			    product_main_category pmc ON psc.product_main_category_id = pmc.id
			JOIN (
			    SELECT auction_item_id, MAX(bid_price) AS max_bid_price  
			    FROM auction_item_bid_request
			    GROUP BY auction_item_id
			) max_bt ON bt.auction_item_id = max_bt.auction_item_id AND bt.bid_price = max_bt.max_bid_price     			    
			JOIN (
		    SELECT ai.*
		    FROM auction_item_img ai
		    JOIN (
		        SELECT auction_item_id, MIN(id) AS min_id
		        FROM auction_item_img
		        GROUP BY auction_item_id
		    ) min_img ON ai.auction_item_id = min_img.auction_item_id AND ai.id = min_img.min_id
			) ati ON at.id = ati.auction_item_id
			LEFT JOIN
			    auction_kakao_payment akp ON bt.id = akp.partner_order_id
	   		 LEFT JOIN 
	        	auction_delivery_after_payment dt ON bt.id = dt.partner_order_id
	    	LEFT JOIN
	        	auction_purchase_confirmed pc ON pc.partner_order_id = bt.id
			JOIN
			    user_table ut ON bt.user_buyer_id = ut.id
			WHERE
			    at.user_seller_id = #{userSellerId}
			    AND at.auction_status = '종료'
			    AND bt.bid_price IN (
			        SELECT
			            MAX(bid_price)
			        FROM
			            auction_item_bid_request
			        GROUP BY
			            auction_item_id
			    ) ORDER BY at.end_date DESC
	</select>
	
	
	<!--  경매 업로더 입장에서 물품 당 주문 내역, 배송 조회 모달 확인 -->
	<select id="getEndedAuctionOrderAndDeliveryInfo" resultType="com.ja.safari.dto.AuctionBidDto">
	  SELECT
		    bt.id, bt.auction_item_id, bt.user_buyer_id, ut.nickname,
		    ut.email, ut.phone,
		    pmc.main_category_name, psc.sub_category_name, at.title,
		    bt.bid_price, at.start_date, at.end_date, ati.auction_item_img_link, akp.reg_date AS payment_reg_date,
		    dt.reg_date AS delivery_reg_date, dt.delivery_status AS delivery_status,
		    CASE WHEN dt.partner_order_id IS NOT NULL THEN 'Yes' ELSE 'No' END AS delivery_exists,
		    CASE WHEN akp.partner_order_id IS NOT NULL THEN 'Yes' ELSE 'No' END AS payment_exists,
		    CASE WHEN pc.partner_order_id IS NOT NULL THEN 'Yes' ELSE 'No' END AS purchase_confirmed_exists
		FROM
		    auction_item_bid_request bt
		JOIN
		    auction_item at ON bt.auction_item_id = at.id
		JOIN
		    product_sub_category psc ON at.auction_sub_category_id = psc.id
		JOIN
			product_main_category pmc ON psc.product_main_category_id = pmc.id
		JOIN (
		    SELECT ai.*
		    FROM auction_item_img ai
		    JOIN (
		        SELECT auction_item_id, MIN(id) AS min_id
		        FROM auction_item_img
		        GROUP BY auction_item_id
		    ) min_img ON ai.auction_item_id = min_img.auction_item_id AND ai.id = min_img.min_id
		) ati ON at.id = ati.auction_item_id
		LEFT JOIN
		    auction_kakao_payment akp ON bt.id = akp.partner_order_id
		LEFT JOIN 
		    auction_delivery_after_payment dt ON bt.id = dt.partner_order_id
		LEFT JOIN
		    auction_purchase_confirmed pc ON pc.partner_order_id = bt.id
		JOIN
		    user_table ut ON bt.user_buyer_id = ut.id
		WHERE
		    at.user_seller_id = #{user_seller_id}
		    AND at.auction_status = '종료'
		    AND bt.bid_price IN (
		        SELECT
		            MAX(bid_price)
		        FROM
		            auction_item_bid_request
		        GROUP BY
		            auction_item_id
		    )
		    AND bt.id = #{id}
	
	
	</select>
	
	
	<!--  배송 시작 (낙찰자가 결제하면 배송준비중, 판매자가 배송처리 누르는순간 배송중)-->
	<insert id="startAuctionDelivery">
		INSERT INTO auction_delivery_after_payment VALUES(
    	 	delivery_seq.nextval,
    		#{partner_order_id},
    		'배송중',
    		SYSDATE)
	</insert>
	
	
	<!--  배송 조회 -->
	<select id="checkAutionDeliveryStatus" resultType="com.ja.safari.dto.AuctionDeliveryDto">
		SELECT * FROM auction_delivery_after_payment WHERE partner_order_id = #{partnerOrderId}
	</select>
	
	<!-- 배송 3일 지나면 배송완료 처리 -->
	<update id="completeAuctionDelivery">
		UPDATE auction_delivery_after_payment
			SET delivery_status = '배송완료'
			WHERE partner_order_id = #{partnerOrderId}
	</update>
	
	<!-- 구매 확정 -->
	<insert id="registerPurchaseConfirmed">
		INSERT INTO auction_purchase_confirmed VALUES(
			#{partner_order_id},
			#{delivery_payment_id},
			SYSDATE
		)
	</insert>
	
	<!--  구매 확정 여부 조회 -->
	<select id="checkPurchaseConfirmedYn" resultType="int">
		SELECT COUNT(*) FROM auction_purchase_confirmed WHERE partner_order_id = #{partnerOrderId}
	</select>




	  <!--  메인 페이지 -->
	  
	  
	  <!--  곧 마감 되는 경매 내림차순 정렬 6개 -->
	  <select id="deadlineApproachingAuctonList" resultType="com.ja.safari.dto.AuctionItemDto">
		  SELECT 
			  ROWNUM, at.*
			  FROM
			    (
			    SELECT * 
			    	FROM 
			    	auction_item 
				    WHERE auction_status = '진행중'
				    ORDER BY end_date) at
				     <![CDATA[		
				  	WHERE ROWNUM <= 6
				     ]]>
	  </select>
	  
	  <!-- 입찰 수 많은 경매 정렬 5개 -->
	  <select id="getAuctionOrderByBidCount" resultType="com.ja.safari.dto.AuctionItemDto">
		  SELECT 
			  ROWNUM, ot.*
			   FROM (
			      SELECT 
			          at.id, at.title, main_category_name, sub_category_name, COUNT(*) bidCount, auction_item_img_link
			      FROM 
			          auction_item at
			      JOIN 
			          auction_item_bid_request bt ON at.id = bt.auction_item_id
			      JOIN
			          product_sub_category psc ON at.auction_sub_category_id = psc.id
			      JOIN
			          product_main_category pmc ON psc.product_main_category_id = pmc.id  
				   JOIN (
				    SELECT ai.*
				    FROM auction_item_img ai
				    JOIN (
				        SELECT auction_item_id, MIN(id) AS min_id
				        FROM auction_item_img
				        GROUP BY auction_item_id
				    ) min_img ON ai.auction_item_id = min_img.auction_item_id AND ai.id = min_img.min_id
				) ati ON at.id = ati.auction_item_id   
				  WHERE at.auction_status = '진행중'    
			      GROUP BY at.id, at.title, main_category_name, sub_category_name, auction_item_img_link
			      ORDER BY bidCount DESC) ot
			       <![CDATA[	
			      	WHERE ROWNUM <= 5
					]]>
	  </select>
	  
	  
	  <!-- 랜덤 출력 -->
	  <select id="getAuctionListByRandom" resultType="com.ja.safari.dto.AuctionItemDto">
		  SELECT *
		    FROM (
		      SELECT 
		          DISTINCT(at.id), at.title, auction_item_img_link
		      FROM 
		          auction_item at
			   JOIN (
				    SELECT ai.*
				    FROM auction_item_img ai
				    JOIN (
				        SELECT auction_item_id, MIN(id) AS min_id
				        FROM auction_item_img
				        GROUP BY auction_item_id
				    ) min_img ON ai.auction_item_id = min_img.auction_item_id AND ai.id = min_img.min_id
				) ati ON at.id = ati.auction_item_id
				 WHERE auction_status = '진행중'           
		        ORDER BY dbms_random.value)
		        <![CDATA[	
		      	WHERE ROWNUM <= 6
				]]> 
			      	
	  </select>
	  
	  




</mapper>