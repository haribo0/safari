<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ja.safari.auction.mapper.AuctionSqlMapper">

	<!-- 경매 물품 등록 시퀀스 -->
	<select id="createPk" resultType="int">
		SELECT auction_item_seq.nextval FROM dual
	</select>

	<!-- 경매 물픔 등록 페이지 이동하면 대규모 카테고리 리스트 출력 -->
	<select id="getProductMainCategories" resultType="com.ja.safari.dto.ProductMainCategoryDto">
		SELECT * FROM product_main_category
	</select>

	<!-- 경매 물품 등록 시 대규모 카테고리 선택할 때 소규모 카테고리 리스트 출력 -->
	<select id="getProductSubCategoriesByMainCategoryId" resultType="com.ja.safari.dto.ProductSubCategoryDto">
		SELECT * FROM product_sub_category WHERE product_main_category_id = #{productMainCategoryId}
	</select>
	
	<!-- 물품의 대규모 카테고리는 무엇일까요? -->
	<select id="getProductMainCategory" resultType="com.ja.safari.dto.ProductMainCategoryDto">
		SELECT * FROM product_main_category WHERE id = #{id}
	</select>
	
	<!-- 물품의 소규모 카테고리는 무엇일까요? -->
	<select id="getProductSubCategory" resultType="com.ja.safari.dto.ProductSubCategoryDto">
		SELECT * FROM product_sub_category WHERE id = #{id}
	</select>
		
	<!-- 경매 등록 -->
	<insert id="registerAuctionProduct">
		INSERT INTO auction_item VALUES(
			#{id},
			#{user_seller_id},
			#{auction_sub_category_id},
			#{title},
			#{description},
			#{start_price},
			#{max_price},
			'준비중',
			#{start_date},
			#{end_date},
			SYSDATE
			)			
	</insert>
	
	<!-- 경매 물품 이미지 등록 -->
	<insert id="registerAuctionProductImage">
		INSERT INTO auction_item_img VALUES(
			auction_item_img_seq.nextval,
			#{auction_item_id},
			#{auction_item_img_link}
			)
	</insert>
	
	<!-- 경매 수정 -->
	<update id="modifyAuctionProduct">
		UPDATE 
				auction_item 
			SET
				auction_sub_category_id = #{auction_sub_category_id},
				title = #{title},
				description = #{description},
				start_price	= #{start_price},
				max_price = #{max_price},
				start_date = #{start_date},
				end_date = #{end_date},
				reg_date = SYSDATE
			WHERE
				id = #{id}	
	</update>
	
	<!-- 경매 이미지 수정 -->
	<update id="modifyAuctionProductImage">
		UPDATE 
				auction_item_img
			SET
				auction_item_img_link = #{auctionItemImgLink}
			WHERE
				id = #{id}	
	</update>	
	
	
	<!-- 경매 삭제 -->
	<delete id="removeAuctionProduct">
		DELETE FROM auction_item WHERE id = #{id}
	</delete>
	
	<!-- 경매 물품 이미지 삭제 -->
	<delete id="removeAuctionProductImage">
		DELETE FROM auction_item_img WHERE auction_item_id = #{auctionItemId}
	</delete>	
	
	<!--  경매 메인페이지에서 경매 리스트 조회 (물품 종류에 관계없이 전체보기) -->
	<select id="getAuctionList" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT * FROM auction_item ORDER BY id DESC
	</select>
	
	<!--  경매 메인페이지에서 경매 리스트 조회 시 메인 이미지 하나 출력 (물품 종류에 관계없이 전체보기) -->
	<select id="getAuctionImg" resultType="com.ja.safari.dto.AuctionItemImgDto">
		SELECT ROWNUM, ai.* 
		   FROM (
		   	SELECT * 
		    FROM auction_item_img 
		    WHERE auction_item_id = #{auctionItemId}
		    ORDER BY id
		    ) ai
		    <![CDATA[		      
		    WHERE ROWNUM <= 1	
		    ]]>
	</select>	
	
	<!--  경매 메인페이지에서 대규모 카테고리 조회 (그에 따른 소규모 카테고리 출력 위함)  -->
	<select id= "getProductMainCategoriesForMenu" resultType="com.ja.safari.dto.ProductMainCategoryDto">
		SELECT * FROM product_main_category
	</select> 
	
	<!--  경매 메인페이지에서 대규모 카테고리 클릭 시 그에 해당하는 경매 리스트 조회 -->
	<select id="getAuctionListByMainCategory" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT * FROM
		  auction_item a
		  WHERE a.auction_sub_category_id 
		 	 IN
			 (SELECT psc.id
			  FROM product_sub_category psc
			  JOIN product_main_category pmc ON psc.product_main_category_id = pmc.id
			  WHERE pmc.id = #{id})
			  ORDER BY id DESC
	</select>

	<!--  경매 메인페이지에서 소규모 카테고리 클릭 시 그에 해당하는 경매 리스트 조회 -->
	<select id="getAuctionListBySubCategory" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT * FROM auction_item WHERE auction_sub_category_id = #{id} ORDER BY id DESC
	</select>


	<!--  경매 물품 상세페이지  -->
	<select id="getAuctionProductDetail" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT * FROM auction_item WHERE id = #{id}
	</select>
	
	<!--  경매 물품 상세페이지 (이미지)  -->
	<select id="getAuctionProductImages" resultType="com.ja.safari.dto.AuctionItemImgDto">
		SELECT * FROM auction_item_img WHERE auction_item_id = #{auctionItemId} ORDER BY id
	</select>	
	
	<!-- 경매 물품 소규모 카테고리명 조회 -->
	<select id="getAuctionProductSubCategory" resultType="com.ja.safari.dto.ProductSubCategoryDto">
		SELECT * FROM product_sub_category WHERE id = #{id}
	</select>
	
	<!--  경매 종료 시간 실시간으로 받아오기 -->
	<select id="getAuctionEndTimeInRealTime" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT end_date FROM auction_item WHERE id = #{auctionItemId}
	</select>


	<!-- 입찰하기 -->
	<insert id="submitBidRequest">
		INSERT INTO auction_item_bid_request VALUES(
			auction_item_bid_request_seq.nextval,
			#{auction_item_id},
			#{user_buyer_id},
			#{bid_price},
			SYSDATE
		)
	</insert>
	

	<!-- 입찰하기 직전 내가 입찰할 수 있는 금액인지 확인 (동시성) -->
	<select id="checkBidAttemptYn" resultType="int">
	       SELECT NVL(MAX(bid_price), 0)
        		  FROM auction_item_bid_request 
       			  WHERE auction_item_id = #{auctionItemId}
	</select>
	
	<!-- 입찰하기 버튼 갱신하기 위해 경매 상태 확인 -->
	<select id="getStatusForRenewInputBidBox" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT start_date, end_date, auction_status 
		    FROM auction_item
		    WHERE id = #{id}
	</select>
	
	<!-- 입찰 정보 확인 -->
	<select id="getBidInfo" resultType="com.ja.safari.dto.AuctionBidDto">
		SELECT * FROM auction_item_bid_request WHERE id = #{id}
	</select>
	
	
	<!-- 한 경매의 입찰 리스트 출력 -->
	<select id="getBidList" resultType="com.ja.safari.dto.AuctionBidDto">
		SELECT * 
			FROM 
		    	auction_item_bid_request 
		    WHERE 
		    	auction_item_id = #{auctionItemId}
		    ORDER BY id DESC
	</select>
	
	<!-- 한 경매의 입찰 횟수 조회 -->
	<select id="getBidCount" resultType="int">
		SELECT COUNT(*) 
			FROM 
		    	auction_item_bid_request 
		    WHERE 
		    	auction_item_id = #{auctionItemId}
	
	</select>	
	
	<!-- 한 경매의 입찰 순위 3위까지 출력 -->
	<select id="getAuctionTop3BidPrice" resultType="com.ja.safari.dto.AuctionBidDto">
		SELECT ROWNUM rm, br.* 
		    FROM (
		    	SELECT *
				    FROM auction_item_bid_request 
				    WHERE auction_item_id = #{auctionItemId}
				    ORDER BY bid_price DESC) br
			<![CDATA[		    
		    WHERE ROWNUM <= 3
		    ]]>
	</select>
	
	<!-- 현 시간 각 경매의 최고 입찰자가 누구인지 회원pk로 출력하기 -->
	<select id="checkNowMaxBiderByAuctionItemId" resultType="int">
			SELECT user_buyer_id 
			   FROM (
				   	SELECT * 
				    FROM auction_item_bid_request 
				    WHERE auction_item_id = #{auctionItemId}
				    ORDER BY bid_price DESC
			    )
		     <![CDATA[	
		   	  WHERE ROWNUM <= 1
		     ]]>
	
	</select>
	
	<!-- 종료 시간이 1분 미만일 때 입찰하였을 경우, 경매 종료 시간 1분 늘리기 -->
	<update id="renewEndTimeAuctionItem">
	UPDATE auction_item
		SET end_date = end_date + INTERVAL '30' SECOND   <!--INTERVAL '1' MINUTE-->
		WHERE id = #{auctionItemId}
	</update>
	
	
	<!-- 경매 현재 가격 계속 업데이트 -->
	<select id="getCurrentBidPriceByAuctionItem" resultType="int">
		SELECT MAX(bid_price)
		  FROM auction_item_bid_request 
		  WHERE auction_item_id = #{auctionItemId}
	</select>
	
	<!-- 경매 입찰 가격이 즉시 낙찰 가격 이상인지 여부 확인 -->
	<select id="isBidPriceGreaterThanOrEqualToMaxPrice" resultType="com.ja.safari.dto.AuctionBidDto">
		SELECT * FROM 
		  auction_item_bid_request 
		  WHERE auction_item_id = #{auctionItemId}
		  AND bid_price >= 
		      (SELECT max_price FROM auction_item WHERE id = #{auctionItemId})		
	</select>
	
	<!--  회원의 입찰 기록 조회 -->
	<select id="getBidHistoryByUser" resultType="com.ja.safari.dto.AuctionBidDto">
		SELECT * FROM auction_item_bid_request WHERE user_buyer_id = #{userBuyerId}
	</select>
	
	<!-- 회원의 경매 업로드 기록 조회 -->
	<select id="getAuctionUploadHistoryByUser" resultType="com.ja.safari.dto.AuctionItemDto">
		 SELECT * FROM auction_item WHERE user_seller_id = #{userSellerId}
	</select>
	
	<!-- 경매 물품 현재 상황 조회 -->
	<select id="getAuctionStatusByAuctionItemId" resultType="com.ja.safari.dto.AuctionItemDto">
		SELECT start_date, end_date, auction_status, title
		  FROM auction_item
		  WHERE id = #{id}
	</select>
	
	<!--  경매 종료일 도달 시 경매 종료 처리 -->
	<update id="renewAuctionItemStatusEnd">
		UPDATE auction_item
			SET auction_status = '종료'
			WHERE id = #{id}	
	</update>
	
	<!--  경매 시작일 도달 시 진행중 처리 -->
	<update id="renewAuctionItemStatusIng">
		UPDATE auction_item
			SET auction_status = '진행중'
			WHERE id = #{id}
	
	</update>
	
	<!--  카운트다운 -->
	<select id="getAuctionCountDown" resultType="com.ja.safari.dto.AuctionItemDto">
		  	SELECT start_date, end_date, auction_status
			  FROM auction_item
			  WHERE id = #{id}
	</select>
	

	
	
	<!-- 낙찰 시 경매 종료로 상태 업데이트 -->
	<update id="renewImmediateSuccessfulBid">
		UPDATE auction_item
			SET auction_status = '종료'
			WHERE id = #{id}
	</update>
	
	
	<!-- 경매 찜하기 클릭 -->
	<insert id="likeAuctionProduct">
		INSERT INTO auction_item_like VALUES(
			 auction_item_like_seq.nextval,
			 #{auction_item_id},
			 #{user_buyer_id},
			 SYSDATE
		)	
	</insert>
	
	<!-- 경매 좋아요 취소 -->
	<delete id="unlikeAuctionProduct">
		DELETE FROM auction_item_like
			WHERE auction_item_id = #{auction_item_id} AND
				  user_buyer_id = #{user_buyer_id}
	</delete>
	
	<!-- 고객 당 경매 좋아요 누른 개수 확인 -->
	<select id="checklikeAuctionProductByUser" resultType="int">
		SELECT COUNT(*) 
			FROM 
				auction_item_like
			WHERE 
				auction_item_id = #{auction_item_id} AND
				user_buyer_id = #{user_buyer_id}
	</select>	
	
	
	<!--  경매물품 당 좋아요 개수 -->
	<select id="countLikeAuctionProduct" resultType="int">
		SELECT COUNT(*) 
		FROM auction_item_like
		WHERE auction_item_id = #{auctionItemId}
	</select>	


	<!--  경매 채팅방에서 채팅 입력 -->
	<insert id="sendMessageInAuctionChatroom">
		INSERT INTO	auction_item_chatroom VALUES(
			auction_item_chatroom_seq.nextval,
			#{auction_item_id},
			#{user_id},
			#{content},
			SYSDATE
		)
	</insert>
	
	<!--  경매 채팅방에서 채팅 기록 조회 -->
	<select id="getChatHistoryInAuctionChatroom" resultType="com.ja.safari.dto.AuctionItemChatroomDto">
		SELECT * FROM auction_item_chatroom WHERE auction_item_id = #{auctionItemId} ORDER BY id DESC
	</select>
	
	<!--  경매 채팅방에서 내 채팅 삭제 -->
	<delete id="removeMessageInAuctionChatroom">
		DELETE FROM auction_item_chatroom WHERE id = #{id}
	</delete>
	
	
	<!-- 경매 채팅방에 있는 입찰기록을 모두 삭제 (임시, 사용하면 안되는데 테스트용) -->
	<delete id="deleteAllBid">
		DELETE FROM auction_item_bid_request WHERE auction_item_id = #{id}
	</delete>
	
	<!-- 경매 채팅방에 있는 채팅을 모두 삭제 (임시, 사용하면 안되는데 테스트용) -->
	<delete id="deleteAllChat">
		DELETE FROM auction_item_chatroom WHERE auction_item_id = #{id}
	</delete>


</mapper>