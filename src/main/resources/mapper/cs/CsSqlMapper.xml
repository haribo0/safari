<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ja.safari.cs.mapper.CsSqlMapper">

	<!-- 로그인 -->
	<select id="getEmpDtoByUserNameAndPw" resultType="com.ja.safari.dto.CsEmpDto">
		SELECT * FROM cs_emp
		WHERE username = #{username}
		AND password = #{password}
	</select>

	<!-- 아이디로 직원 찾기 -->
	<select id="getEmpDtoById" resultType="com.ja.safari.dto.CsEmpDto">
		SELECT * FROM cs_emp
		WHERE id = #{id}
		ORDER BY id
	</select>


	<!-- 직원 등록 -->
	<insert id="registerEmployee" >
		INSERT INTO cs_emp VALUES(
			cs_emp_seq.nextval,
			0,
			'고객관리',
			'사원',
			#{name},
			#{nickname},
			#{username},
			#{password},
			SYSDATE
		)
	</insert>
	
	<!-- 직원 출근 -->
	<insert id="insertTimeInByEmpId" >
		INSERT INTO cs_attendance_log VALUES(
			cs_attendance_log_seq.nextval,
			#{empId},
			SYSDATE,
			NULL
		)
	</insert>
	
	<!-- 직원 퇴근 -->
	<insert id="updateTimeOutByLogId" >
		UPDATE cs_attendance_log 
		SET
			time_out = SYSDATE
		WHERE id = #{id}
	</insert>
	
	<!-- 직원 리스트 -->
	<select id="getEmployeeList" resultType="com.ja.safari.dto.CsEmpDto">
		SELECT * FROM cs_emp
		ORDER BY id
	</select>
	
	<!-- 직원 근무 상태 -->
	<select id="getRecentAttendanceLogDtos" resultType="com.ja.safari.dto.CsAttendanceLogDto">
		<!-- SELECT * FROM CS_ATTENDANCE_LOG 
		WHERE id = (SELECT max(id) FROM (
			SELECT * FROM cs_attendance_log
			WHERE emp_id = #{empId}
		)) -->
		SELECT * FROM (
			SELECT t1.*, rownum rm FROM 
			(SELECT *
			FROM cs_attendance_log
			WHERE emp_id = #{empId}
			ORDER BY time_in DESC) t1
		) t2
		WHERE t2.rm = 1
	</select>
	
	<!-- 기존 스케줄 지우기  -->
	<delete id="deleteScheduleByEmpId">
		DELETE FROM cs_schedule
		WHERE emp_id = #{empId}
	</delete>
	
	<!-- 새 스케줄 기록 -->
	<insert id="insertScheduleByEmpId">
		INSERT INTO cs_schedule VALUES(
			cs_schedule_seq.nextval,
			#{emp_id},
			#{weekday},
			#{start_time},
			#{end_time}
		)
	</insert>
	
	<!-- 스케줄 가져오기 -->
	<select id="getScheduleByEmpId" resultType="com.ja.safari.dto.CsScheduleDto">
		SELECT * FROM cs_schedule
		WHERE emp_id = #{empId}
	</select>
	
	<!-- 스케줄 가져오기 -->
	<select id="getScheduleList" resultType="com.ja.safari.dto.CsScheduleDto">
		SELECT * FROM cs_schedule
	</select>
	
	<!-- 출근한 직원 중 가장 일이 적은 직원 가져오기 -->
	<select id="getEmployeeWithLeastWorkload" resultType="com.ja.safari.dto.CsEmpDto">
		
		<![CDATA[
			SELECT * FROM (
				SELECT e.*, rownum rn
				FROM cs_emp e
				LEFT JOIN cs_attendance_log al ON e.id = al.emp_id
				LEFT JOIN (
				    SELECT emp_id, COUNT(*) AS unanswered_qnas
				    FROM cs_qna
				    WHERE qna_reply IS NULL
				    GROUP BY emp_id
				) q ON e.id = q.emp_id
				LEFT JOIN (
				    SELECT emp_id, COUNT(*) AS open_live_chats
				    FROM cs_live_chat
				    WHERE end_date IS NULL
				    GROUP BY emp_id
				) lc ON e.id = lc.emp_id
				WHERE al.time_out IS NULL
				AND al.time_in IS NOT NULL
				AND al.time_in > (SYSDATE-2)
				ORDER BY open_live_chats, unanswered_qnas, e.id
			) t1
			WHERE t1.rn=1
		]]>
		
	</select>
	
	
	<!-- 1대1 문의 저장  -->
	<insert id="insertQnaPost">
		INSERT INTO cs_qna VALUES(
			cs_qna_seq.nextval,
			#{user_id},
			#{category_id},
			#{emp_id},
			#{qna_title},
			#{qna_content},
			SYSDATE,
			NULL,
			NULL
		)
	</insert>
	
	
	<!-- 문의 카테고리 가져오기 -->
	<select id="getCategoryById" resultType="com.ja.safari.dto.CsCategoryDto">
		SELECT * FROM cs_category
		WHERE id = #{id}
	</select>
	
	<!-- 회원 | 1대1문의 가져오기 -->
	<select id="getInquiryListByUserId" resultType="com.ja.safari.dto.CsQnaDto">
		SELECT * FROM cs_qna
		WHERE user_id = #{userId}
		ORDER BY id DESC
	</select>
	
	<!-- 직원 | 1대1문의 가져오기 -->
	<select id="getInquiryListByEmpId" resultType="com.ja.safari.dto.CsQnaDto">
		SELECT * FROM cs_qna
		WHERE emp_id = #{empId}
		AND qna_reply IS NULL
		ORDER BY id
	</select>
	
	<!-- id로 | 1대1문의 가져오기 -->
	<select id="getQnaDtoById" resultType="com.ja.safari.dto.CsQnaDto">
		SELECT * FROM cs_qna
		WHERE id = #{id}
	</select>
	
	<!-- 직원 | 미처리 답변 개수 -->
	<select id="getUnansweredInquiryCount" resultType="int">
		SELECT COUNT(*) FROM cs_qna
		WHERE emp_id = #{empId}
		AND qna_reply IS NULL
	</select>
	
	<!-- 1대1문의 답변저장 -->
	<update id="saveQnaReply" >
		UPDATE cs_qna
		SET 
			qna_reply = #{qna_reply},
			reply_date = SYSDATE
		WHERE id = #{id}
	</update>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- id로 | 1대1문의/유저/직원/카테고리 조인 후 가져오기 | ResultMap -->
	<resultMap id="combinedResultMap" type="com.ja.safari.dto.CsQnaCombinedDto">
	  <result property="id" column="qna_id"  />
	  <result property="qna_title" column="qna_title"  />
	  <result property="qna_content" column="qna_content"  />
	  <result property="reg_date" column="reg_date"  />
	  <result property="qna_reply" column="qna_reply" />
	  <result property="reply_date" column="reply_date"  />
	  <!-- UserDto -->
	  <association property="userDto" javaType="com.ja.safari.dto.UserDto">
	    <result property="id" column="user_id"  />
	    <result property="email" column="email"  />
	    <result property="pw" column="pw"  />
	    <result property="nickname" column="nickname"  />
	    <result property="phone" column="phone" />
	    <result property="gender" column="gender"  />
	    <result property="birth" column="birth"  />
	    <result property="profile_img_link" column="profile_img_link"  />
	    <result property="reg_date" column="user_reg_date"  />
	  </association>
	  <!--CsCategoryDto -->
	  <association property="categoryDto" javaType="com.ja.safari.dto.CsCategoryDto">
	    <result property="id" column="category_id" />
	    <result property="category" column="category"  />
	  </association>
	  <!-- CsEmpDto (empId만)-->
	  <association property="empDto" javaType="com.ja.safari.dto.CsEmpDto">
	    <result property="id" column="emp_id"  />
	  </association>
	</resultMap>
	
	<select id="getQnaCombinedDtoById" parameterType="java.lang.Integer"  resultMap="combinedResultMap">
		SELECT q.id AS qna_id, q.qna_title, q.qna_content, q.reg_date, q.qna_reply, q.reply_date,
		       u.id AS user_id, u.email, u.pw, u.nickname, u.phone, u.gender, u.birth, u.profile_img_link, u.reg_date AS user_reg_date,
		       c.id AS category_id, c.category,
		       e.id AS emp_id
		FROM CS_QNA q
		LEFT JOIN USER_TABLE u ON q.user_id = u.id
		LEFT JOIN cs_category c ON q.category_id = c.id
		LEFT JOIN cs_emp e ON q.emp_id = e.id
		WHERE q.id = #{id, jdbcType=INTEGER}
	</select>
	<!-- id로 | 1대1문의/유저/직원/카테고리 조인 후 가져오기 | ResultMap -->
	
	
	
	
	
	
	
	
</mapper>